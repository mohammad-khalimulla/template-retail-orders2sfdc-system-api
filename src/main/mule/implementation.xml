<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:oauth="http://www.mulesoft.org/schema/mule/oauth"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/oauth http://www.mulesoft.org/schema/mule/oauth/current/mule-oauth.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<os:object-store name="Token_Object_store_configuratione" doc:name="Object store" doc:id="0cab3ed0-cb64-45ff-9e8f-fa894efaeab9" entryTtl="800" />
	<sub-flow name="GetOrder" doc:id="575ed9e5-88a5-4710-9d2d-67fcb84917e5">
		<http:request method="GET" doc:name="Get Order"
			doc:id="432b2d38-05fd-4d79-b8e5-1298b4bd051d" config-ref="HTTP_ShopApi_Orders_Request_configuration"
			path="/orders/{order_no}">
			<http:uri-params><![CDATA[#[output application/java
---
{
	"order_no" : attributes.uriParams.orderId
}]]]></http:uri-params>
		</http:request>
	</sub-flow>
	<sub-flow name="GetOrders" doc:id="60313db0-c244-4abc-855e-cedb3fc5fcb4">
		<http:request method="GET" doc:name="Get Orders"
			doc:id="a6511e7c-28e2-4495-b6b8-c93e70fd0069" config-ref="HTTP_ShopApi_Orders_Request_configuration"
			path="/order_search" />
	</sub-flow>
	<sub-flow name="GetCustomer" doc:id="0ae06e22-a750-4736-9aaa-7828e39d6a57">
		<http:request method="GET" doc:name="Get Customer"
			doc:id="461342d8-d104-4225-a25c-015d9b12beee" config-ref="HTTP_ShopApi_Orders_Request_configuration"
			path="/customers/{customerId}">
			<http:uri-params><![CDATA[#[output application/java
---
{
	"customerId" : attributes.uriParams.customerId
}]]]></http:uri-params>
		</http:request>
	</sub-flow>
	<sub-flow name="getToken" doc:id="51a68e58-c53a-4ff4-8e47-3c40a98290d1" >
		<os:retrieve doc:name="Retrieve token from object store" doc:id="bee90479-137b-4862-9fca-c5d32eb1abfe" key="token" objectStore="Token_Object_store_configuratione">
			<os:default-value ><![CDATA[#["null"]]]></os:default-value>
		</os:retrieve>
		<choice doc:name="Is token in Object Store?" doc:id="c955bcaf-7917-4056-be8e-c86baa8431c7" >
			<when expression='#[payload == "null"]'>
				<flow-ref doc:name="requestBearerToken" doc:id="61d4b3f9-56e7-4187-956e-05d7e897aa78" name="requestBearerToken"/>
			</when>
		</choice>
	</sub-flow>
	<sub-flow name="requestBearerToken" doc:id="d9e1ba06-d8a1-493e-a951-0896a7104164" >
		<ee:transform doc:name="Transform Message" doc:id="b9d0cc2b-2202-4d7b-92ac-0eb18fd135c5" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/x-www-form-urlencoded
---
"grant_type": "urn:demandware:params:oauth:grant-type:client-id:dwsid:dwsecuretoken"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="POST" doc:name="Request" doc:id="e7fe960b-35fa-4af3-b82a-bd16f56a62b4" config-ref="HTTP_ShopApi_Orders_TokenRequest_configuration" path="${ocapi.orders.tokenUrl}">
		</http:request>
		<os:store doc:name="Store token for 800 seconds " doc:id="5beb3a39-5f46-4e95-bf65-83169b86f6a3" key="token" objectStore="Token_Object_store_configuratione" doc:description="Token from commerce cloud expires in 899 seconds">
			<os:value ><![CDATA[#[payload.access_token]]]></os:value>
		</os:store>
		<ee:transform doc:name="Transform Message" doc:id="36282528-0724-4c0e-a0d3-0ae396010616" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.access_token]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<flow name="createOrder" doc:id="878c0af1-7ac3-45f2-b459-a02ee76c2802">
		<set-variable value="#[payload]" doc:name="Save input to variable order"
			doc:id="24283da9-ca88-4edd-a5e2-9175bb825139" variableName="order"
			mimeType="application/json" />
		<http:request method="GET" doc:name="Get Customer"
			doc:id="f97f2417-1722-4298-a0e1-9771ab891063" config-ref="HTTP_DataApi_Request_configuration"
			path="/customer_lists/{customerListID}/customers/{id}" target="customer">
			<http:uri-params><![CDATA[#[output application/java
---
{
	"customerListID" : p("ocapi.customerListID"),
	"id" : attributes.uriParams.customerId
}]]]></http:uri-params>

		</http:request>

		<logger level="INFO" doc:name="Logger" doc:id="55f6099c-98e4-4b3b-842e-33498b360470" message="#[vars.customer]"/>
		<choice doc:name="Does Customer exist?" doc:id="e41fc0aa-9b8e-47e0-bd2b-0642b66d91d7">
			<when expression="#[sizeOf(payload) != 0]">
				<ee:transform doc:name="Map Order to commerce Basket"
					doc:id="f3d934bb-d890-41b3-9150-95a820313b4d">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"product_total": vars.order.subtotal as Number,
	"tax_total": vars.order.taxPrice as Number,
	"shipping_total": vars.order.shippingPrice as Number,
	"order_total" : vars.order.total as Number,
	"customer_info" : {
		"customer_id" : 	attributes.uriParams.customerId,
		"email" : vars.customer.email
	},
	"shipments" : flatten(
        (vars.order.orderItems.pickupItems map {
        		"shipment_id" : $.orderItemId ++ ":" ++ $.location.locationType,
			"tracking_number" : vars.order.trackingNumber,
			"shipping_status" : if(vars.order.status == null or vars.order.status == "Draft") null else ( if(vars.order.status == "Completed") "shipped" else "not_shipped"),
			"c_fromStoreId" : $.location.locationId,
			"shipping_method" : {
				"id" : $.location.locationType
			},
			"shipping_address" : {
				"id" : vars.order.shippingAddress.identifier,
                "first_name" : vars.order.shippingAddress.recipient,
                "last_name" : vars.order.shippingAddress.recipient,
                "full_name" : vars.order.shippingAddress.recipient,
                "address1" : vars.order.shippingAddress.address,
                "address2" : vars.order.shippingAddress.secondaryAddress,
                "city" : vars.order.shippingAddress.city,
                "state_code" : vars.order.shippingAddress.state,
                "postal_code" : vars.order.shippingAddress.postalCode,
                "country_code" : vars.order.shippingAddress.country
            }
		}) + (vars.order.orderItems.shipmentItems map {
			"shipment_id" : $.orderItemId ++ ":" ++ $.location.locationType,
			"tracking_number" : vars.order.trackingNumber,
			"shipping_status" : if(vars.order.status == null or vars.order.status == "Draft") null else ( if(vars.order.status == "Completed") "shipped" else "not_shipped"),
			"c_fromStoreId" : $.location.locationId,
			"shipping_method" : {
				"id" : $.location.locationType
			},
			"shipping_address" : {
				"id" : vars.order.shippingAddress.identifier,
                "first_name" : vars.order.shippingAddress.recipient,
                "last_name" : vars.order.shippingAddress.recipient,
                "full_name" : vars.order.shippingAddress.recipient,
                "address1" : vars.order.shippingAddress.address,
                "address2" : vars.order.shippingAddress.secondaryAddress,
                "city" : vars.order.shippingAddress.city,
                "state_code" : vars.order.shippingAddress.state,
                "postal_code" : vars.order.shippingAddress.postalCode,
                "country_code" : vars.order.shippingAddress.country
            }
		}) + (vars.order.orderItems.partnersItems map {
			"shipment_id" : $.orderItemId ++ ":" ++ $.location.locationType,
			"tracking_number" : vars.order.trackingNumber,
			"shipping_status" : if(vars.order.status == null or vars.order.status == "Draft") null else ( if(vars.order.status == "Completed") "shipped" else "not_shipped"),
			"c_fromStoreId" : $.location.locationId,
			"shipping_method" : {
				"id" : $.location.locationType
			},
			"shipping_address" : {
				"id" : vars.order.shippingAddress.identifier,
                "first_name" : vars.order.shippingAddress.recipient,
                "last_name" : vars.order.shippingAddress.recipient,
                "full_name" : vars.order.shippingAddress.recipient,
                "address1" : vars.order.shippingAddress.address,
                "address2" : vars.order.shippingAddress.secondaryAddress,
                "city" : vars.order.shippingAddress.city,
                "state_code" : vars.order.shippingAddress.state,
                "postal_code" : vars.order.shippingAddress.postalCode,
                "country_code" : vars.order.shippingAddress.country
            }
		}) + {
			"shipping_method" : {
				"id" : "STORE"
			},
			"shipping_address" : {
				"id" : vars.order.shippingAddress.identifier,
                "first_name" : vars.order.shippingAddress.recipient,
                "last_name" : vars.order.shippingAddress.recipient,
                "full_name" : vars.order.shippingAddress.recipient,
                "address1" : vars.order.shippingAddress.address,
                "address2" : vars.order.shippingAddress.secondaryAddress,
                "city" : vars.order.shippingAddress.city,
                "state_code" : vars.order.shippingAddress.state,
                "postal_code" : vars.order.shippingAddress.postalCode,
                "country_code" : vars.order.shippingAddress.country
            }
		}),
	 "product_items" : flatten((vars.order.orderItems.pickupItems map {
        "product_id" : $.orderItemId,
        "item_id" : $.productId,
        "product_name" : $.productName,
        "quantity" : $.quantity,
        "price" : $.price as Number,
        "shipment_id" : $.orderItemId ++ ":" ++ $.location.locationType
    }) + (vars.order.orderItems.shipmentItems map {
        "product_id" : $.orderItemId,
        "item_id" : $.productId,
        "product_name" : $.productName,
        "quantity" : $.quantity,
        "price" : $.price as Number,
        "shipment_id" : $.orderItemId ++ ":" ++ $.location.locationType
    }) + (vars.order.orderItems.partnersItems map {
        "product_id" : $.orderItemId,
        "item_id" : $.productId,
        "product_name" : $.productName,
        "quantity" : $.quantity,
        "price" : $.price as Number,
        "shipment_id" : $.orderItemId ++ ":" ++ $.location.locationType
    })),
    
    "billing_address" : {
        "full_name" : vars.order.billingAddress.recipient,
        "first_name" : vars.order.billingAddress.recipient,
        "last_name" : vars.order.billingAddress.recipient,
        "address1" : vars.order.billingAddress.address,
        "address2" : vars.order.billingAddress.secondaryAddress,
        "city" : vars.order.billingAddress.city,
        "state_code" : vars.order.billingAddress.state,
        "postal_code" : vars.order.billingAddress.postalCode,
        "country_code" : vars.order.billingAddress.country
    },
    
    "payment_instruments": [
    	{
  		"payment_method_id": "PayPal"
  	}
  	]
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<flow-ref doc:name="getToken" doc:id="161772e9-f235-4e28-b8f9-3dea27388b51" name="getToken" target="token"/>
				<logger level="INFO" doc:name="Logger" doc:id="ae1ca152-b0c3-4a4a-bbce-5b7a971fef3a" message="#[Token: vars.token]"/>
				<logger level="INFO" doc:name="Logger" doc:id="fff0779c-5114-4cf9-9ad7-80c35ee1a567" message='#[payload]'/>
				<http:request method="POST" doc:name="Create Basket"
					doc:id="945789ea-b5d1-4ca0-b655-1bde94a7cf11" path="/baskets" config-ref="HTTP_ShopApi_Orders_Request_configuration">
					<http:headers ><![CDATA[#[output application/java
---
{
	"Authorization" : "Bearer " ++ vars.token
}]]]></http:headers>
				</http:request>
				<ee:transform doc:name="Prepare Request" doc:id="f0526440-7131-49ba-82ce-a52e7e5f81e9">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"basket_id": payload.basket_id
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="7afa070c-f884-46a6-8d88-b4dace2e9f6e" message="#[payload]"/>
				<flow-ref doc:name="getToken" doc:id="5b7d9ffa-7038-4cc4-b423-9d17c4436c29" name="getToken" target="token"/>
				<http:request method="POST" doc:name="Create Order" doc:id="4ae8b5e6-aa97-4ab8-b307-604900017a3d" path="/orders" config-ref="HTTP_ShopApi_Orders_Request_configuration">
					<http:headers ><![CDATA[#[output application/java
---
{
	"Authorization" : "Bearer " ++ vars.token
}]]]></http:headers>
				</http:request>
				<ee:transform doc:name="Successful Responce" doc:id="fbb9572e-4e77-4b95-9aa9-7ba1279299a5">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order was created",
	identifier: payload.order_no
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Error Response 404" doc:id="ab005239-1647-4654-93e6-297e9c7a3465" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Customer not found"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="60d72823-0d8c-48df-a005-e303d3e39d45" >
				<ee:transform doc:name="Error Response 400" doc:id="50e5d142-550c-4a1a-b796-15b608af38e2">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order not created"
}]]></ee:set-payload>
							</ee:message>
							<ee:variables>
								<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
400]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getOrders" doc:id="68300e28-4c6f-45fd-bbc1-a37203c16b61" >
		<ee:transform doc:name="Prepare Request" doc:id="96d41838-2fef-4646-97f7-80964b54c788" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{ 
   "query" :
   { 
      "text_query": { "fields": ["customer_no"], "search_phrase": attributes.uriParams.customerId }
   },
   "select" : "(**)",
   "sorts" : [{"field":"customer_name", "sort_order":"asc"}]
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Get Orders" doc:id="8b80671b-0879-4839-9733-a4cdbca21dfc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
   "_v" : "19.5",
   "_type" : "order_search_result",
   "count" : 1,
   "hits" : 
   [
      
      {
         "_type" : "order_search_hit",
         "data" : 
         {
  "order_no":"00000101",       	
  "product_sub_total": "100.21",
  "tax_total": "15.22",
  "shipping_total": "10.00",
  "order_total": "125.43",
  "customer_info": {
    "customer_id": "attributes.uriParams.customerId",
    "email": null
  },
  "shipments": [
    {
      "tracking_number": null,
      "shipping_status": null,
      "shipping_method": {
        "id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2",
        "external_shipping_method": "STORE"
      },
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:STORE",
      "shipping_address": {
        "id": "myShippingIdentifier",
        "full_name": "myShippingRecipient",
        "address1": "myShippingAddress",
        "address2": "myShippingSecAddress",
        "city": "myShippingCity",
        "state_code": "myShippingState",
        "postal_code": "myShippingPostalCode",
        "country_code": "myShippingCountry"
      }
    },
    {
      "tracking_number": null,
      "shipping_status": null,
      "shipping_method": {
        "id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2",
        "external_shipping_method": "STORE"
      },
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:STORE",
      "shipping_address": {
        "id": "myShippingIdentifier",
        "full_name": "myShippingRecipient",
        "address1": "myShippingAddress",
        "address2": "myShippingSecAddress",
        "city": "myShippingCity",
        "state_code": "myShippingState",
        "postal_code": "myShippingPostalCode",
        "country_code": "myShippingCountry"
      }
    },
    {
      "tracking_number": null,
      "shipping_status": null,
      "shipping_method": {
        "id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2",
        "external_shipping_method": "WAREHOUSE"
      },
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:WAREHOUSE",
      "shipping_address": {
        "id": "myShippingIdentifier",
        "full_name": "myShippingRecipient",
        "address1": "myShippingAddress",
        "address2": "myShippingSecAddress",
        "city": "myShippingCity",
        "state_code": "myShippingState",
        "postal_code": "myShippingPostalCode",
        "country_code": "myShippingCountry"
      }
    },
    {
      "tracking_number": null,
      "shipping_status": null,
      "shipping_method": {
        "id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2",
        "external_shipping_method": "PARTNER"
      },
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:PARTNER",
      "shipping_address": {
        "id": "myShippingIdentifier",
        "full_name": "myShippingRecipient",
        "address1": "myShippingAddress",
        "address2": "myShippingSecAddress",
        "city": "myShippingCity",
        "state_code": "myShippingState",
        "postal_code": "myShippingPostalCode",
        "country_code": "myShippingCountry"
      }
    }
  ],
  "product_items": [
    {
      "item_id": "88668866-2c6d-4fa6-9e17-4b2c42e0f051",
      "product_id": "eb8c8ca7-3c42-4489-a820-3aa138430b75",
      "product_name": "Smart Slim Micro Stripe Shirt",
      "quantity": 1,
      "price": "50",
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:STORE"
    },
    {
      "item_id": "dfc25820-c37d-456c-8867-4a89a51b7f75",
      "product_id": "7c9be8ad-0791-4362-b195-a53dcca4e1d7",
      "product_name": "Men's Regular Fit V-Neck Knit Sweater",
      "quantity": 2,
      "price": "50",
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:STORE"
    },
    {
      "item_id": "3c1eb223-811c-4e86-8ea3-4a06a002a79a",
      "product_id": "cd67cd8a-8901-48c5-890b-0a21f4a0f8ad",
      "product_name": "Men's Chino Jogger Pants",
      "quantity": 3,
      "price": "50",
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:WAREHOUSE"
    },
    {
      "item_id": "fc3d4900-c5ac-4649-8bc8-cbbef4fe8fde",
      "product_id": "e1c515f9-102d-4830-b353-18fe48065732",
      "product_name": "Uniforms Modern Fit Short Sleeve Polo Shirt",
      "quantity": 1,
      "price": "50",
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:PARTNER"
    }
  ],
  "billing_address": {
    "id": "myIdentifier",
    "full_name": "myRecipient",
    "address1": "myAddress",
    "address2": "mySecAddress",
    "city": "myCity",
    "state_code": "myState",
    "postal_code": "myPostalCode",
    "country_code": "myCountry"
  }
},
         "relevance" : 2.822207450866699
      }
   ],
   "select" : "(**)",
   "start" : 0,
   "total" : 1
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Map to Orders Response" doc:id="3c21be3d-4c64-4810-8c04-78366e10d855" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.hits.data map {  
	"identifier": $.order_no,
    "subtotal": $.product_sub_total,
    "taxPrice": $.tax_total,
    "shippingPrice": $.shipping_total, 
    "total": $.order_total,
    "status": if(sizeOf($.shipments) == 0 or $.shipments[0].shipping_status == null) "Draft" else (if ($.shipments[0].shipping_status == "shipped") "Completed" else "Processing") ,
    "billingAddress": {
        "identifier" : $.billing_address.id,
        "recipient" : $.billing_address.full_name,
        "address" : $.billing_address.address1,
        "secondaryAddress" : $.billing_address.address2,
        "city" : $.billing_address.city,
        "state" : $.billing_address.state_code,
        "postalCode" : $.billing_address.postal_code,
        "country" : $.billing_address.country_code
    },
    "shippingAddress": {
        "identifier" : if(sizeOf($.shipments) > 0 and $.shipments[0].shipping_address != null) $.shipments[0].shipping_address.id else null,
        "recipient" : if(sizeOf($.shipments) > 0 and $.shipments[0].shipping_address != null) $.shipments[0].shipping_address.full_name else null,
        "address" : if(sizeOf($.shipments) > 0 and $.shipments[0].shipping_address != null) $.shipments[0].shipping_address.address1 else null,
        "secondaryAddress" : if(sizeOf($.shipments) > 0 and $.shipments[0].shipping_address != null) $.shipments[0].shipping_address.address2 else null,
        "city" : if(sizeOf($.shipments) > 0 and $.shipments[0].shipping_address != null) $.shipments[0].shipping_address.city else null,
        "state" : if(sizeOf($.shipments) > 0 and $.shipments[0].shipping_address != null) $.shipments[0].shipping_address.state_code else null,
        "postalCode" : if(sizeOf($.shipments) > 0 and $.shipments[0].shipping_address != null) $.shipments[0].shipping_address.postal_code else null,
        "country" : if(sizeOf($.shipments) > 0 and $.shipments[0].shipping_address != null) $.shipments[0].shipping_address.country_code else null
    },
    "orderItems":{ 
    		"pickupItems": ($.product_items filter($.shipment_id contains("STORE"))) map { 
                    "orderItemId": $.item_id,
                    "productId": $.product_id,
                    "productName": $.product_name,
                    "location": {
                      "locationId": ($.shipment_id splitBy(":"))[0],
                      "deliveryMethod":"PICKUP",
                      "locationType": "STORE"
                    },
                    "price" : $.price,
                    "quantity": $.quantity
            },
            "shipmentItems": ($.product_items filter($.shipment_id contains("WAREHOUSE"))) map {     
                    "orderItemId": $.item_id,
                    "productId": $.product_id,
                    "productName": $.product_name,
                    "location": {
                      "locationId": ($.shipment_id splitBy(":"))[0],
                      "deliveryMethod":"SHIPMENT",
                      "locationType": "WAREHOUSE"
                    },
                    "price" : $.price,
                    "quantity": $.quantity
            },
               
            "partnersItems": ($.product_items filter($.shipment_id contains("PARTNER"))) map {  
                    "orderItemId": $.item_id,
                    "productId": $.product_id,
                    "productName": $.product_name,
                    "location": {
                      "locationId": ($.shipment_id splitBy(":"))[0],
                      "deliveryMethod":"SHIPMENT",
                      "locationType": "PARTNER"
                    },
                    "price" : $.price,
                    "quantity": $.quantity
                }
        }
  }]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getOrder" doc:id="f770d6e8-84b8-4d2d-a0b4-a7938593d382" >
		<ee:transform doc:name="Get Order" doc:id="1a1132e6-312a-4ce5-9f5b-88ad4bf945f7" >
			<ee:message >
				<ee:set-payload ><![CDATA[{
  "product_sub_total": "100.21",
  "tax_total": "15.22",
  "shipping_total": "10.00",
  "order_total": "125.43",
  "customer_info": {
    "customer_id": "attributes.uriParams.customerId",
    "email": null
  },
  "shipments": [
    {
      "tracking_number": null,
      "shipping_status": null,
      "shipping_method": {
        "id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2",
        "external_shipping_method": "STORE"
      },
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:STORE",
      "shipping_address": {
        "id": "myShippingIdentifier",
        "full_name": "myShippingRecipient",
        "address1": "myShippingAddress",
        "address2": "myShippingSecAddress",
        "city": "myShippingCity",
        "state_code": "myShippingState",
        "postal_code": "myShippingPostalCode",
        "country_code": "myShippingCountry"
      }
    },
    {
      "tracking_number": null,
      "shipping_status": null,
      "shipping_method": {
        "id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2",
        "external_shipping_method": "STORE"
      },
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:STORE",
      "shipping_address": {
        "id": "myShippingIdentifier",
        "full_name": "myShippingRecipient",
        "address1": "myShippingAddress",
        "address2": "myShippingSecAddress",
        "city": "myShippingCity",
        "state_code": "myShippingState",
        "postal_code": "myShippingPostalCode",
        "country_code": "myShippingCountry"
      }
    },
    {
      "tracking_number": null,
      "shipping_status": null,
      "shipping_method": {
        "id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2",
        "external_shipping_method": "WAREHOUSE"
      },
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:WAREHOUSE",
      "shipping_address": {
        "id": "myShippingIdentifier",
        "full_name": "myShippingRecipient",
        "address1": "myShippingAddress",
        "address2": "myShippingSecAddress",
        "city": "myShippingCity",
        "state_code": "myShippingState",
        "postal_code": "myShippingPostalCode",
        "country_code": "myShippingCountry"
      }
    },
    {
      "tracking_number": null,
      "shipping_status": null,
      "shipping_method": {
        "id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2",
        "external_shipping_method": "PARTNER"
      },
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:PARTNER",
      "shipping_address": {
        "id": "myShippingIdentifier",
        "full_name": "myShippingRecipient",
        "address1": "myShippingAddress",
        "address2": "myShippingSecAddress",
        "city": "myShippingCity",
        "state_code": "myShippingState",
        "postal_code": "myShippingPostalCode",
        "country_code": "myShippingCountry"
      }
    }
  ],
  "product_items": [
    {
      "item_id": "88668866-2c6d-4fa6-9e17-4b2c42e0f051",
      "product_id": "eb8c8ca7-3c42-4489-a820-3aa138430b75",
      "product_name": "Smart Slim Micro Stripe Shirt",
      "quantity": 1,
      "price": "50",
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:STORE"
    },
    {
      "item_id": "dfc25820-c37d-456c-8867-4a89a51b7f75",
      "product_id": "7c9be8ad-0791-4362-b195-a53dcca4e1d7",
      "product_name": "Men's Regular Fit V-Neck Knit Sweater",
      "quantity": 2,
      "price": "50",
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:STORE"
    },
    {
      "item_id": "3c1eb223-811c-4e86-8ea3-4a06a002a79a",
      "product_id": "cd67cd8a-8901-48c5-890b-0a21f4a0f8ad",
      "product_name": "Men's Chino Jogger Pants",
      "quantity": 3,
      "price": "50",
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:WAREHOUSE"
    },
    {
      "item_id": "fc3d4900-c5ac-4649-8bc8-cbbef4fe8fde",
      "product_id": "e1c515f9-102d-4830-b353-18fe48065732",
      "product_name": "Uniforms Modern Fit Short Sleeve Polo Shirt",
      "quantity": 1,
      "price": "50",
      "shipment_id": "1c9a20dc-c585-42fd-ac1a-1216085b76d2:PARTNER"
    }
  ],
  "billing_address": {
    "id": "myIdentifier",
    "full_name": "myRecipient",
    "address1": "myAddress",
    "address2": "mySecAddress",
    "city": "myCity",
    "state_code": "myState",
    "postal_code": "myPostalCode",
    "country_code": "myCountry"
  }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Map to Order Response" doc:id="8be12fc5-b55f-4a60-bc34-bbc1d965758a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{  
	"identifier": payload.order_no,
    "subtotal": payload.product_sub_total,
    "taxPrice": payload.tax_total,
    "shippingPrice": payload.shipping_total, 
    "total": payload.order_total,
    "status": if(sizeOf(payload.shipments) == 0 or payload.shipments[0].shipping_status == null) "Draft" else (if (payload.shipments[0].shipping_status == "shipped") "Completed" else "Processing") ,
    "billingAddress": {
        "identifier" : payload.billing_address.id,
        "recipient" : payload.billing_address.full_name,
        "address" : payload.billing_address.address1,
        "secondaryAddress" : payload.billing_address.address2,
        "city" : payload.billing_address.city,
        "state" : payload.billing_address.state_code,
        "postalCode" : payload.billing_address.postal_code,
        "country" : payload.billing_address.country_code
    },
    "shippingAddress": {
        "identifier" : if(sizeOf(payload.shipments) > 0 and payload.shipments[0].shipping_address != null) payload.shipments[0].shipping_address.id else null,
        "recipient" : if(sizeOf(payload.shipments) > 0 and payload.shipments[0].shipping_address != null) payload.shipments[0].shipping_address.full_name else null,
        "address" : if(sizeOf(payload.shipments) > 0 and payload.shipments[0].shipping_address != null) payload.shipments[0].shipping_address.address1 else null,
        "secondaryAddress" : if(sizeOf(payload.shipments) > 0 and payload.shipments[0].shipping_address != null) payload.shipments[0].shipping_address.address2 else null,
        "city" : if(sizeOf(payload.shipments) > 0 and payload.shipments[0].shipping_address != null) payload.shipments[0].shipping_address.city else null,
        "state" : if(sizeOf(payload.shipments) > 0 and payload.shipments[0].shipping_address != null) payload.shipments[0].shipping_address.state_code else null,
        "postalCode" : if(sizeOf(payload.shipments) > 0 and payload.shipments[0].shipping_address != null) payload.shipments[0].shipping_address.postal_code else null,
        "country" : if(sizeOf(payload.shipments) > 0 and payload.shipments[0].shipping_address != null) payload.shipments[0].shipping_address.country_code else null
    },
    "orderItems":{ 
    		"pickupItems": (payload.product_items filter($.shipment_id contains("STORE"))) map { 
                    "orderItemId": $.item_id,
                    "productId": $.product_id,
                    "productName": $.product_name,
                    "location": {
                      "locationId": ($.shipment_id splitBy(":"))[0],
                      "deliveryMethod":"PICKUP",
                      "locationType": "STORE"
                    },
                    "price" : $.price,
                    "quantity": $.quantity
            },
            "shipmentItems": (payload.product_items filter($.shipment_id contains("WAREHOUSE"))) map {     
                    "orderItemId": $.item_id,
                    "productId": $.product_id,
                    "productName": $.product_name,
                    "location": {
                      "locationId": ($.shipment_id splitBy(":"))[0],
                      "deliveryMethod":"SHIPMENT",
                      "locationType": "WAREHOUSE"
                    },
                    "price" : $.price,
                    "quantity": $.quantity
            },
               
            "partnersItems": (payload.product_items filter($.shipment_id contains("PARTNER"))) map {  
                    "orderItemId": $.item_id,
                    "productId": $.product_id,
                    "productName": $.product_name,
                    "location": {
                      "locationId": ($.shipment_id splitBy(":"))[0],
                      "deliveryMethod":"SHIPMENT",
                      "locationType": "PARTNER"
                    },
                    "price" : $.price,
                    "quantity": $.quantity
                }
        }
  }]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="0ea82728-dd9b-46e7-ac0c-56d0e4352d88" type="HTTP:NOT_FOUND">
				<ee:transform doc:name="Error Response 404" doc:id="717dcfad-a3be-4f10-a406-304f55f2a9db">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order not found"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="deleteOrder" doc:id="406d4779-1290-4e0b-9c87-af546acbd990" >
		<ee:transform doc:name="Prepare Request" doc:id="5c299f25-c46f-4285-b4cb-0d175e2be818" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  "status" : "cancelled"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="PATCH" doc:name='Update Order status to "cancelled"' doc:id="3e3301e5-7859-4c32-aea5-28f4e5f2c08b" config-ref="HTTP_ShopApi_Orders_Request_configuration" path="/orders/{order_no}" >
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"order_no" : attributes.uriParams.orderId
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="Successful Responce" doc:id="6ef6ab46-f94a-402a-9e96-d4bdd69b4d1f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order was deleted"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="1980fdb5-2610-4a45-b701-0dc01dbed9ad" type="HTTP:NOT_FOUND">
				<ee:transform doc:name="Error Response 400" doc:id="d718be5b-e8ad-47d0-b63d-d2a61bab40fd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order not deleted"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
400]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="updateOrder" doc:id="0b89cc62-b7a6-4753-8c2b-6047577d6512" >
		<ee:transform doc:name="Map Order to Commerce Order" doc:id="da201d46-54cb-49ed-b336-6ae1aad0e530">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	
	"product_sub_total": payload.subtotal,
	"tax_total": payload.taxPrice,
	"shipping_total": payload.shippingPrice,
	"order_total" : payload.total,
	"customer_info" : {
		"customer_id" : 	attributes.uriParams.customerId,
		"email" : payload.email
	},
	"shipments" : 
        (payload.orderItems.pickupItems map {
			"tracking_number" : payload.trackingNumber,
			"shipping_status" : if(payload.status == null or payload.status == "Draft") null else ( if(payload.status == "Completed") "shipped" else "not_shipped"),
			"shipping_method" : {
				"id" : $.location.locationId,
                "external_shipping_method" : $.location.locationType
			},
			"shipment_id" : $.location.locationId ++ ":" ++ $.location.locationType,
			"shipping_address" : {
                "id" : payload.shippingAddress.identifier,
                "full_name" : payload.shippingAddress.recipient,
                "address1" : payload.shippingAddress.address,
                "address2" : payload.shippingAddress.secondaryAddress,
                "city" : payload.shippingAddress.city,
                "state_code" : payload.shippingAddress.state,
                "postal_code" : payload.shippingAddress.postalCode,
                "country_code" : payload.shippingAddress.country
            }
		}) + (payload.orderItems.shipmentItems map {
			"tracking_number" : payload.trackingNumber,
			"shipping_status" : if(payload.status == null or payload.status == "Draft") null else ( if(payload.status == "Completed") "shipped" else "not_shipped"),
			"shipping_method" : {
				"id" : $.location.locationId,
                "external_shipping_method" : $.location.locationType
			},
			"shipment_id" : $.location.locationId ++ ":" ++ $.location.locationType,
			"shipping_address" : {
                "id" : payload.shippingAddress.identifier,
                "full_name" : payload.shippingAddress.recipient,
                "address1" : payload.shippingAddress.address,
                "address2" : payload.shippingAddress.secondaryAddress,
                "city" : payload.shippingAddress.city,
                "state_code" : payload.shippingAddress.state,
                "postal_code" : payload.shippingAddress.postalCode,
                "country_code" : payload.shippingAddress.country
            }
		}) + (payload.orderItems.partnersItems map {
			"tracking_number" : payload.trackingNumber,
			"shipping_status" : if(payload.status == null or payload.status == "Draft") null else ( if(payload.status == "Completed") "shipped" else "not_shipped"),
			"shipping_method" : {
				"id" : $.location.locationId,
                "external_shipping_method" : $.location.locationType
			},
			"shipment_id" : $.location.locationId ++ ":" ++ $.location.locationType,
			"shipping_address" : {
                "id" : payload.shippingAddress.identifier,
                "full_name" : payload.shippingAddress.recipient,
                "address1" : payload.shippingAddress.address,
                "address2" : payload.shippingAddress.secondaryAddress,
                "city" : payload.shippingAddress.city,
                "state_code" : payload.shippingAddress.state,
                "postal_code" : payload.shippingAddress.postalCode,
                "country_code" : payload.shippingAddress.country
            }
		}),
	"product_items" : (payload.orderItems.pickupItems map {
        "item_id" : $.orderItemId,
        "product_id" : $.productId,
        "product_name" : $.productName,
        "quantity" : $.quantity,
        "price" : $.price,
        "shipment_id" : $.location.locationId + ":" + $.location.locationType
    }),
    
    "billing_address" : {
        "id" : payload.billingAddress.identifier,
        "full_name" : payload.billingAddress.recipient,
        "address1" : payload.billingAddress.address,
        "address2" : payload.billingAddress.secondaryAddress,
        "city" : payload.billingAddress.city,
        "state_code" : payload.billingAddress.state,
        "postal_code" : payload.billingAddress.postalCode,
        "country_code" : payload.billingAddress.country
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="PATCH" doc:name='Update Order' doc:id="759a7430-9704-48c8-bb5c-5efc45a72737" config-ref="HTTP_ShopApi_Orders_Request_configuration" path="/orders/{order_no}">
			<http:uri-params><![CDATA[#[output application/java
---
{
	"order_no" : attributes.uriParams.orderId
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="Successful Responce" doc:id="9e9c3c40-6c9b-4ef0-86ee-72aa2ed4a4a8">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order was updated"
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="5a3eec77-e84b-4c47-a055-ee9bc6551213" type="HTTP:NOT_FOUND">
				<ee:transform doc:name="Error Response 404" doc:id="8c93a7d1-2c0d-472d-99e3-710a6a4f9272">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order not found"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-continue>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="fb31882c-3726-4988-9759-588d7e713b0a" >
				<ee:transform doc:name="Error Response 400" doc:id="07f986d2-54f5-43cf-b6fb-74a85fd21e54">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json 
---
{
	message: "Order not updated"
}]]></ee:set-payload>
							</ee:message>
							<ee:variables>
								<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
400]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="updateOrderStatus" doc:id="dd1009f0-9f1c-4da7-be33-c0ce7d284f1a" >
		<http:request method="PATCH" doc:name='Update Order' doc:id="f47ce677-92de-4b0b-a106-0b887aa97c54" config-ref="HTTP_ShopApi_Orders_Request_configuration" path="/orders/{order_no}">
			<http:uri-params><![CDATA[#[output application/java
---
{
	"order_no" : attributes.uriParams.orderId
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="Successful Responce" doc:id="d0401fc6-1e4f-4f6b-abdb-6e817eedd3b4">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order status was updated"
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="eea7a07d-f486-4e02-b85a-ea777310fcc9" type="HTTP:NOT_FOUND">
				<ee:transform doc:name="Error Response 404" doc:id="022dc8d0-d941-4e29-8013-0f4c4b2f0075">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order not found"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-continue>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="6bea4396-04f1-4d3b-912c-9630ad8bb6ae" >
				<ee:transform doc:name="Error Response 400" doc:id="44d5d6d3-ede5-4f07-965f-a4fd026b6362">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json 
---
{
	message: "Order status not updated"
}]]></ee:set-payload>
							</ee:message>
							<ee:variables>
								<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
400]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
			</on-error-continue>
		</error-handler>
	</flow>
</mule>
